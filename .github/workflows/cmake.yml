# This starter workflow is for a CMake project running on multiple platforms. There is a different starter workflow if you just want a single platform.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-single-platform.yml
name: "@gi-tcg/cbinding Build"

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  js-build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      
      - name: JS part build
        run: |
          bun i
          bun run build --prod

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: cbinding-js-build-output
          path: packages/cbinding

  build:
    needs: js-build
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        build_type: [Release]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
            package_manager: choco
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
            package_manager: sudo apt
          - os: macos-latest
            c_compiler: clang
            cpp_compiler: clang++

    steps:
      - uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: cbinding-js-build-output
          path: packages/cbinding

      - name: Setup CMake
        uses: lukka/get-cmake@latest

      - name: Setup Windows dev command
        if: ${{ runner.os == 'Windows' }}
        uses: ilammy/msvc-dev-cmd@v1

      - name: Set reusable strings
        # Turn repeated input strings (such as the build output directory) into step outputs. These step outputs can be used throughout the workflow file.
        id: strings
        shell: bash
        run: |
          echo "source-dir=${{ github.workspace }}/packages/cbinding" >> "$GITHUB_OUTPUT"
          echo "build-dir=${{ github.workspace }}/packages/cbinding/build" >> "$GITHUB_OUTPUT"

      - name: Setup cache
        id: cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.strings.outputs.build-dir }}
          key: ${{ runner.os }}-build

      - name: Configure CMake
        run: >
          cmake -B ${{ steps.strings.outputs.build-dir }}
          -GNinja
          -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
          -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -S ${{ steps.strings.outputs.source-dir }}

      - name: Build
        run: cmake --build ${{ steps.strings.outputs.build-dir }} --config ${{ matrix.build_type }}

    # - name: Test
    #   working-directory: ${{ steps.strings.outputs.build-dir }}
    #   # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
    #   run: ctest --build-config ${{ matrix.build_type }}
